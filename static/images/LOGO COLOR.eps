%!PS-Adobe-2.0 EPSF-1.2%%Title: LOGO COLOR (Convertido)-4%%Creator: FreeHand 10.0%%CreationDate: 3/9/04 13:15%%BoundingBox: 0 0 1555 813%%FHPathName:sara:Applications:Macromedia FreeHand MX:FreeHand MX.app:Contents:MacOS:LOGO COLOR (Convertido)-4%ALDOriginalFile:sara:Applications:Macromedia FreeHand MX:FreeHand MX.app:Contents:MacOS:LOGO COLOR (Convertido)-4%ALDBoundingBox: -226 -646 1758 1905%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 1 1 1 1 (100c 100m 100a 100n-1)%%+ 0.08 1 1 0.05 (8c 100m 100a 5n)%%+ 1 1 1 1 (100c 100m 100a 100n)%%+ 0.65 0.65 0.65 1 (65c 65m 65a 100n)%%EndComments%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{dup where not{AltsysSepDict}if 3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{/cntr 0 def2 copy readstring{{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop}ifcntr 0 gt{pop 2 copydup length cntr sub cntr getintervalreadbinarystring} ifpop exch pop} bdf/_NXLevel2 defed { _NXLevel2 not { /colorimage where {userdict eq {/_rci false def } if} if} if} if/md defed{ md type /dicttype eq { /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if}if }if/setstrokeadjust defed{true setstrokeadjust/C{curveto}bdf/L{lineto}bdf/m{moveto}bdf}{/dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/setstrokeadjust{pop}bdf }ifelse/privrectpath { 4 -2 roll mdtransform round exch round exch idtransform 2 copy 0 lt exch 0 lt xor{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}ifelseclosepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed {/_bfh {/_fonthacksave currentpacking def false setpacking} bdf/_efh {_fonthacksave setpacking} bdf}{/_bfh {} bdf/_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` { false setoverprint /-save0- save def5 index concatpopstorerect left bottom width height rectclippop/MMdict_count countdictstack def/MMop_count count 1 sub defuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath} bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1 statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelseend def/printerRes gsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/graycalcs[{Angle Frequency} {GrayAngle GrayFrequency} {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps {forcemaxsteps{maxsteps}{/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelseprinterRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if }ifelse} bdf/nextrelease defed { /languagelevel defed not { /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if}if}iffhnumcolors 1 ne {/calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {currentpagedevice /PreRenderingEnhance known{currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if} if} if/gradfrequency 144 defprinterRes 1000 lt {/gradfrequency 72 def} if/adjnumsteps {dup dtransform abs exch abs max printerRes div gradfrequency mul round 5 max min }bdf/goodsep {spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted? 0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{systemdict /packedarray known {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{ /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{ /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/i{dup 0 eq{pop df dup} {dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{ {/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{/NF exch def { exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length /Len exch def dup length Len add string dup Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{ dup FontDirectory exch known {pop 3 -1 roll pop} {RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf/RCJ{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFJ{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCJ} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFJ{dup hasfont not { pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse }if}bdf/FFJ{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get dup length 256 eq{256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }{7 -1 roll pop pop pop pop pop findfont}ifelse}ifelse_efh}bdf/GS {dup hasfont {findfontexch makesetfontexchpopts}{pop pop popts} ifelse} bdf/RCK{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFK{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCK} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFK{dup hasfont not { pop/JCsmhasfont {/JCsm}{/Courier}ifelse }if}bdf/FFK{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCTC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFTC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCTC} ifelse}bdf/FDFTC{dup hasfont not { pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse }if}bdf/FFTC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCSC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFSC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFSC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCSC} ifelse}bdf/FDFSC{dup hasfont not { pop/zh-gbscript-1.11hasfont {/zh-gbscript-1.11}{/Courier}ifelse }if}bdf/FFSC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFSC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/fps{currentflat exch dup 0 le{pop 1}if {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont {/Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 muladd add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor { max max max } ndf/maxspot {pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{0 1 2 index length 1 sub{ 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put}for4 1 roll pop pop pop}bdf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image}ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{aload pop (_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage}ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage}ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor { spots exch getdup 4 get (_vc_Registration) eq{pop 1 exch sub setseparationgray}{0 5 getinterval exch setcustomcolor}ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdfuserdict /islevel2systemdict /languagelevel known dup{pop systemdict /languagelevel get 2 ge} ifputislevel2 not{/currentcmykcolor{0 0 0 1 currentgray sub} ndf} if/tc{gsavesetcmykcolor currentcmykcolorgrestore} bind def/testCMYKColorThrough{tc add add add 0 ne} bind def/fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput}{ pop }ifelse/bc4 [0 0 0 0] def /_lfp4 {1 pop /yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdfc1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round height abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/bcs [0 0] def /_lfs4 {/yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/tint2 xdf /tint1 xdf bcs exch 1 exch put tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round height abs adjnumsteps dup 2 lt {pop 2} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfs6 {/tint2 xdf /tint1 xdf bcs exch 1 exch put /inrad xdf /radius xdf /yt xdf /xt xdf tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfp6 {1 pop /k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdf/inrad xdf /radius xdf /yt xdf /xt xdf c1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{AltsysDict /cvc 2 index put aload length dup 4 eq{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}{6 eq {sethexcolor} {setspotcolor} ifelse }ifelse}bdf 0 setseparationgray/imgr {1692 1570.13 3676.25 4121.31 } def /bleed 0 def /clpr {1692 1570.13 3676.25 4121.31 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1918 -2216 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 0 1 (_vc_Registration) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1]vcvms1945.3594 2776.9263 m1990.1835 2776.9263 L1990.1835 2875.0249 L1990.1835 2901.4785 2005.2473 2926.095 2029.4964 2926.095 C2051.1736 2926.095 2060.7263 2911.0312 2060.7263 2889.7214 C2060.7263 2776.9263 L2105.5504 2776.9263 L2105.5504 2875.0249 L2105.5504 2901.4785 2120.6142 2926.095 2145.5982 2926.095 C2166.5406 2926.095 2176.0932 2911.0312 2176.0932 2889.7214 C2176.0932 2776.9263 L2220.9173 2776.9263 L2220.9173 2907.7245 L2220.9173 2947.7722 2196.3008 2967.245 2155.8857 2967.245 C2130.9017 2967.245 2112.1638 2957.3249 2098.5696 2939.3218 C2089.3843 2959.8968 2065.8701 2967.245 2043.8254 2967.245 C2019.9437 2967.245 2003.7777 2958.4272 1990.1835 2944.4656 C1990.1835 2962.8361 L1945.3594 2962.8361 L1945.3594 2776.9263 L[0.08 1 1 0.05]vctrue setoverprintf false setoverprintntrue eomode2395.8059 2906.2549 m2395.8059 2959.162 2355.7581 2967.245 2315.7104 2967.245 C2274.9278 2967.245 2236.3497 2950.3441 2236.3497 2906.6223 C2281.1738 2904.7852 L2281.1738 2924.9928 2289.6242 2932.7084 2315.7104 2932.7084 C2335.1832 2932.7084 2350.9818 2927.5647 2350.9818 2909.1941 C2350.9818 2903.683 L2339.5921 2899.6415 2318.6497 2895.9673 2302.4836 2892.6607 C2283.7457 2888.9866 L2256.1899 2883.4754 2227.1644 2867.3093 2227.1644 2830.9357 C2227.1644 2794.9294 2255.0876 2772.5174 2290.3591 2772.5174 C2313.5059 2772.5174 2333.7135 2779.8656 2350.9818 2793.8272 C2350.9818 2789.0509 2352.4514 2781.3352 2355.3907 2776.9263 C2402.7867 2776.9263 L2400.2148 2780.9678 2395.8059 2789.0509 2395.8059 2808.1562 C2395.8059 2906.2549 Lh2350.9818 2843.4276 m2350.9818 2819.5459 2324.1608 2809.2584 2303.2184 2809.2584 C2287.0524 2809.2584 2274.193 2818.4437 2274.193 2832.4053 C2274.193 2850.041 2288.1546 2854.8174 2305.0555 2858.1241 C2329.672 2863.2678 L2337.755 2864.7374 2345.1032 2866.9419 2350.9818 2869.8812 C2350.9818 2843.4276 Ltrue setoverprintf false setoverprintnfalse eomode2413.0542 2776.9263 m2457.8783 2776.9263 L2457.8783 2866.9419 L2457.8783 2907.3571 2485.4341 2921.6861 2515.9292 2921.6861 C2515.9292 2967.245 L2489.843 2967.245 2469.268 2958.4272 2458.6131 2937.1173 C2457.8783 2937.1173 L2457.8783 2962.8361 L2413.0542 2962.8361 L2413.0542 2776.9263 Ltrue setoverprintf false setoverprintntrue eomode2690.4013 2859.2263 m2690.4013 2925.7276 2663.2129 2967.245 2601.1205 2967.245 C2540.8652 2967.245 2505.9612 2925.3602 2505.9612 2869.8812 C2505.9612 2814.4022 2540.8652 2772.5174 2601.1205 2772.5174 C2651.8232 2772.5174 2678.6442 2796.7665 2692.6058 2818.0763 C2654.7625 2840.1209 L2650.3536 2833.875 2636.392 2813.6674 2601.1205 2813.6674 C2576.8714 2813.6674 2553.7246 2831.6705 2552.9897 2859.2263 C2690.4013 2859.2263 Lh2552.9897 2893.7629 m2557.7661 2913.6031 2575.0344 2930.504 2601.1205 2930.504 C2631.2482 2930.504 2643.3728 2903.683 2643.3728 2893.7629 C2552.9897 2893.7629 L[0.3 0.3 0.3 0.3]vctrue setoverprintf false setoverprintnfalse eomode2697.3836 2776.9263 m2742.2077 2776.9263 L2742.2077 2875.0249 L2742.2077 2901.4785 2757.2715 2926.095 2781.5206 2926.095 C2803.1979 2926.095 2812.7505 2911.0312 2812.7505 2889.7214 C2812.7505 2776.9263 L2857.5746 2776.9263 L2857.5746 2875.0249 L2857.5746 2901.4785 2872.6385 2926.095 2897.6224 2926.095 C2918.5648 2926.095 2928.1175 2911.0312 2928.1175 2889.7214 C2928.1175 2776.9263 L2972.9416 2776.9263 L2972.9416 2907.7245 L2972.9416 2947.7722 2948.3251 2967.245 2907.9099 2967.245 C2882.926 2967.245 2864.188 2957.3249 2850.5938 2939.3218 C2841.4086 2959.8968 2817.8943 2967.245 2795.8496 2967.245 C2771.968 2967.245 2755.8019 2958.4272 2742.2077 2944.4656 C2742.2077 2962.8361 L2697.3836 2962.8361 L2697.3836 2776.9263 L[1 1 1 1]vctrue setoverprintf false setoverprintntrue eomode3075.8176 2967.245 m3015.5623 2967.245 2980.6583 2925.3602 2980.6583 2869.8812 C2980.6583 2814.4022 3015.5623 2772.5174 3075.8176 2772.5174 C3136.073 2772.5174 3170.977 2814.4022 3170.977 2869.8812 C3170.977 2925.3602 3136.073 2967.245 3075.8176 2967.245 Ch3075.8176 2926.095 m3107.7824 2926.095 3123.9484 2898.9066 3123.9484 2869.8812 C3123.9484 2840.8558 3107.7824 2813.6674 3075.8176 2813.6674 C3043.8529 2813.6674 3027.6868 2840.8558 3027.6868 2869.8812 C3027.6868 2898.9066 3043.8529 2926.095 3075.8176 2926.095 Ctrue setoverprintf false setoverprintnfalse eomode3185.6994 2962.8361 m3158.511 2962.8361 L3158.511 2930.504 L3185.6994 2930.504 L3185.6994 2819.5459 L3185.6994 2791.2553 3198.1913 2774.7218 3234.9324 2774.7218 C3248.894 2774.7218 3259.9163 2776.9263 3270.5712 2779.1308 C3270.5712 2815.8718 L3263.9578 2815.137 3256.977 2813.6674 3250.731 2813.6674 C3233.4627 2813.6674 3230.5235 2821.7504 3230.5235 2836.4468 C3230.5235 2930.504 L3270.5712 2930.504 L3270.5712 2962.8361 L3230.5235 2962.8361 L3230.5235 3028.6026 L3185.6994 3028.6026 L3185.6994 2962.8361 Ltrue setoverprintf false setoverprintntrue eomode3353.2681 2967.245 m3293.0127 2967.245 3258.1087 2925.3602 3258.1087 2869.8812 C3258.1087 2814.4022 3293.0127 2772.5174 3353.2681 2772.5174 C3413.5234 2772.5174 3448.4274 2814.4022 3448.4274 2869.8812 C3448.4274 2925.3602 3413.5234 2967.245 3353.2681 2967.245 Ch3353.2681 2926.095 m3385.2328 2926.095 3401.3989 2898.9066 3401.3989 2869.8812 C3401.3989 2840.8558 3385.2328 2813.6674 3353.2681 2813.6674 C3321.3034 2813.6674 3305.1373 2840.8558 3305.1373 2869.8812 C3305.1373 2898.9066 3321.3034 2926.095 3353.2681 2926.095 Ctrue setoverprintf false setoverprintnfalse eomode3141.1224 2431.5957 m3153.5963 2390.7962 3196.5512 2367.6952 3237.3864 2379.5979 C3238.4839 2379.1854 L3310.8785 2400.133 L3297.5224 2376.6574 3275.5184 2358.041 3247.6503 2349.5207 C3189.7459 2331.8176 3128.4558 2364.4061 3110.7525 2422.3103 C3098.8861 2461.1232 3109.6157 2501.4573 3135.4191 2529.1664 C3140.4056 2517.6106 3145.2581 2506.3609 3149.7477 2495.9502 C3138.0741 2477.4479 3134.2236 2454.1605 3141.1224 2431.5957 C[1 4]vcf n3237.3864 2379.5979 m3259.0626 2386.2186 3275.2374 2400.5036 3284.5749 2418.3096 C3275.1649 2400.3921 3258.7251 2386.1174 3237.3864 2379.5979 C[0 0 0 0]vcf n3179.7068 2523.4932 m3183.838 2525.6318 3188.2197 2527.4296 3192.8272 2528.8383 C3233.9582 2541.4135 3277.4948 2518.2648 3290.0698 2477.1335 C3302.645 2436.002 3279.4963 2392.4659 3238.3651 2379.8909 C3237.3864 2379.5979 L3207.8183 2452.0728 L3179.7068 2523.4932 L[1 4]vcf n3145.3473 2610.7883 m3153.0156 2614.4925 3161.0644 2617.6592 3169.4613 2620.2265 C3258.0486 2647.3104 3351.8162 2597.4535 3378.9002 2508.8663 C3387.8601 2479.5595 3388.3997 2449.6859 3381.9015 2421.8471 C3391.9348 2424.9146 L3461.7307 2446.2535 L3463.2894 2474.138 3460.0427 2502.7666 3451.4009 2531.0322 C3412.0749 2659.661 3275.9244 2732.0533 3147.2956 2692.7272 C3142.9936 2691.412 3138.7545 2689.9884 3134.5804 2688.4603 C3170.3696 2709.7449 3230.5001 2739.2236 3230.5001 2739.2236 C3511.6322 2736.6944 3539.0345 2362.1094 3356.6678 2255.4727 C3333.4893 2241.9194 3311.0148 2232.6708 3289.4376 2226.8401 C3289.3879 2226.8254 L3289.3363 2226.8103 L3289.2887 2226.7965 L3289.2379 2226.7819 L3289.1894 2226.768 L3289.1398 2226.7539 L3160.6581 2187.8236 3024.8659 2260.191 2985.6005 2388.6216 C2953.9379 2492.185 2994.6951 2600.624 3078.9157 2659.4785 C3079.1197 2659.0483 L3080.8376 2655.3861 3094.0319 2624.9637 3110.0737 2587.856 C3060.5059 2545.84 3041.257 2477.8067 3058.1013 2410.7876 C3068.7269 2368.5111 3108.6784 2314.5072 3162.1288 2300.1808 C3195.3649 2287.8841 3231.0342 2288.2664 3267.54 2299.4273 C3326.8135 2317.5493 3368.7524 2365.5448 3381.9015 2421.8471 C3310.8785 2400.133 L3325.2841 2425.4395 3329.6257 2456.3735 3320.4398 2486.4184 C3302.7367 2544.3228 3241.4465 2576.9111 3183.5423 2559.2081 C3178.147 2557.5588 3172.9651 2555.5275 3168.0299 2553.1594 C3145.3473 2610.7883 Lf n2707.6484 2571.0886 m2665.1467 2574.8069 2627.6362 2543.6334 2623.375 2501.3126 C2622.5814 2500.4495 L2614.884 2425.4786 L2598.121 2446.6566 2589.103 2474.0323 2591.6427 2503.0632 C2596.9202 2563.3833 2650.0959 2608.003 2710.416 2602.7258 C2750.8482 2599.1884 2784.2262 2574.1305 2800.2516 2539.8257 C2787.6691 2539.5312 2775.4207 2539.2462 2764.0862 2538.9834 C2751.3041 2556.7383 2731.1547 2569.0321 2707.6484 2571.0886 Cf n2623.375 2501.3126 m2621.3935 2478.7343 2628.5791 2458.3859 2641.5908 2443.0579 C2628.5029 2458.4949 2621.4261 2479.0852 2623.375 2501.3126 C[0 0 0 0]vcf n2778.4007 2500.8877 m2778.8361 2496.2562 2778.8615 2491.52 2778.4416 2486.7203 C2774.6932 2443.8732 2736.9206 2412.1782 2694.0733 2415.9271 C2651.2258 2419.6757 2619.5313 2457.4481 2623.28 2500.2953 C2623.375 2501.3126 L2701.6496 2501.5779 L2778.4007 2500.8877 L[1 4]vcf n2872.2114 2500.0438 m2872.7733 2491.5462 2872.6942 2482.8972 2871.929 2474.15 C2863.8553 2381.8667 2782.502 2313.6032 2690.2188 2321.6769 C2659.6893 2324.348 2631.7887 2335.0387 2608.4111 2351.4925 C2607.4967 2341.0406 L2601.1356 2268.3327 L2626.406 2256.4416 2654.1664 2248.7274 2683.6113 2246.1513 C2817.6066 2234.4283 2935.7316 2333.5468 2947.4545 2467.5422 C2947.8466 2472.0237 2948.1147 2476.4874 2948.2616 2480.93 C2954.5895 2439.7732 2959.3963 2372.9777 2959.3963 2372.9777 C2851.736 2113.2621 2494.1591 2228.1786 2463.6032 2437.2145 C2459.7195 2463.7827 2459.5636 2488.0855 2462.2404 2510.2759 C2462.2454 2510.3274 L2462.2507 2510.3809 L2462.2558 2510.4303 L2462.2612 2510.4828 L2462.2666 2510.533 L2462.2721 2510.5842 L2474.3069 2644.295 2592.2745 2743.0907 2726.0634 2731.3856 C2833.9476 2721.9469 2919.2231 2643.5349 2942.2425 2543.3988 C2941.7672 2543.3707 L2937.7281 2543.1499 2904.578 2542.3128 2864.1626 2541.3399 C2843.7744 2603.0384 2787.9054 2646.3718 2719.4559 2655.86 C2676.2771 2661.8453 2611.239 2645.0331 2577.9325 2600.8411 C2554.0806 2574.6314 2541.0729 2541.416 2537.7457 2503.3871 C2532.3438 2441.6406 2561.134 2384.7757 2608.4111 2351.4925 C2614.884 2425.4786 L2632.9514 2402.6418 2660.0067 2387.0282 2691.3053 2384.29 C2751.6254 2379.0126 2804.801 2423.6324 2810.0785 2483.9523 C2810.5704 2489.5726 2810.6281 2495.1382 2810.2813 2500.6012 C2872.2114 2500.0438 Lf n2252.9911 2410.7311 m2287.5062 2435.8084 2295.3634 2483.9437 2270.8146 2518.6785 C2270.8472 2519.8505 L2227.4714 2581.4803 L2254.0162 2576.4949 2278.782 2561.7509 2295.9111 2538.1754 C2331.5016 2489.19 2320.6433 2420.6297 2271.6581 2385.0391 C2238.8235 2361.183 2197.194 2358.1962 2162.594 2373.5722 C2171.8966 2382.0492 2180.9534 2390.2999 2189.3352 2397.9343 C2210.6298 2392.9206 2233.9019 2396.8617 2252.9911 2410.7311 Cf nvmrs2270.8146 2518.6785 m2257.4974 2537.0181 2238.7248 2547.6606 2218.849 2550.6921 C2238.8538 2547.6284 2257.703 2536.7319 2270.8146 2518.6785 C[0 0 0 0]vcf n2153.5392 2417.2937 m2150.1721 2420.5034 2147.0458 2424.0611 2144.2138 2427.9589 C2118.9326 2462.7544 2126.6456 2511.4552 2161.4415 2536.7362 C2196.2375 2562.0174 2244.9379 2554.3043 2270.2188 2519.5085 C2270.8146 2518.6785 L2211.9154 2467.1257 L2153.5392 2417.2937 L[1 4]vcf n2082.1874 2356.3856 m2076.1885 2362.4301 2070.5739 2369.0092 2065.4127 2376.1127 C2010.9631 2451.055 2027.575 2555.9451 2102.5172 2610.3947 C2127.3099 2628.4079 2155.38 2638.6441 2183.8174 2641.5635 C2177.6505 2650.0514 L2134.7508 2709.0967 L2107.8783 2701.492 2081.8668 2689.1016 2057.9549 2671.7282 C1949.1388 2592.6672 1925.0181 2440.3668 2004.0792 2331.5507 C2006.7234 2327.9113 2009.4496 2324.3667 2012.2533 2320.9175 C1980.4766 2347.8268 1933.0274 2395.0833 1933.0274 2395.0833 C1843.89 2661.7195 2189.1417 2809.5831 2349.3411 2671.8718 C2369.7023 2654.3689 2385.7639 2636.1301 2398.3019 2617.6271 C2398.3319 2617.5849 L2398.363 2617.541 L2398.3916 2617.5005 L2398.4219 2617.4572 L2398.4508 2617.4159 L2398.4802 2617.3736 L2477.1193 2508.5677 2452.9055 2356.6142 2344.257 2277.675 C2256.6454 2214.0204 2140.8461 2217.2519 2057.7787 2277.7217 C2058.1191 2278.0547 L2061.0225 2280.8713 2085.4914 2303.2513 2115.3543 2330.5002 C2171.2187 2297.3127 2241.8116 2301.2625 2299.6947 2339.0084 C2336.2081 2362.8191 2374.2621 2418.1757 2370.4058 2473.3779 C2371.2116 2508.8063 2359.2373 2542.4075 2336.7993 2573.2903 C2300.367 2623.4339 2241.3327 2647.4614 2183.8174 2641.5635 C2227.4714 2581.4803 L2198.8539 2586.8618 2168.192 2580.8955 2142.7749 2562.4284 C2093.7895 2526.8379 2082.9314 2458.2776 2118.5217 2409.2923 C2121.8377 2404.728 2125.4454 2400.4899 2129.2912 2396.5945 C2082.1874 2356.3856 Lf nvmrvmrend%%Trailer